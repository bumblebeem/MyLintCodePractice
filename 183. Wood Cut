public class Solution {
    /** 
     *@param L: Given n pieces of wood with length L[i]
     *@param k: An integer
     *return: The maximum length of the small pieces.
     */
    public int woodCut(int[] L, int k) {
        if(L == null || L.length == 0){
            return 0;
        }
        //差点用排序求max了，晕。。
        int max = Integer.MIN_VALUE;
        for(int i = 0; i < L.length; i ++){
            max = Math.max(max, L[i]);
        }
        
        int start = 1, end = max;
        while(start + 1 < end){
            int middle = (end - start) / 2 + start;
            int cutResult = cut(L, middle);
            if(cutResult < k){
                end = middle;
            }else if(cutResult > k){
                start = middle;
            }else{
                start = middle;
            }
        }
        if(cut(L, end) >= k){
            return end;
        }
        if(cut(L, start) >= k){
            return start;
        }
        return 0;
    }
    
    private int cut(int[] woods, int len){
        int pieces = 0;
        for(int i = 0; i < woods.length; i ++){
            pieces += woods[i] / len;
        }
        return pieces;
    }
}
